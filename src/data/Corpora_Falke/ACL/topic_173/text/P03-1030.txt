1 Introduction
Topic Detection and Tracking (TDT) research is sponsored by the DARPA Translingual Information Detection, Extraction, and Summarization (TIDES) program. The research has five tasks related to organizing streams of data such as newswire and broadcast news (Wayne, 2000): story segmentation, topic tracking, topic detection, new event detection (NED), and link detection (LNK). A link detection system detects whether two stories are “linked”, or discuss the same event. A story about a plane crash and another story about the funeral of the crash victims are considered to be linked. In contrast, a story about hurricane Andrew and a story about hurricane Agnes are not linked because they are two different events. A new event detection system detects when a story discusses a previously unseen or “not linked” event. Link detection is considered to be a core technology for new event detection and the other tasks.
Several groups are performing research in the TDT tasks of link detection and new event detection. Based on their findings, we incorporated a number of their ideas into our baseline system. CMU (Yang et al., 1998) and UMass (Allan et al., 2000a) found that for new event detection it was better to compare a new story against all previously seen stories than to cluster previously seen stories and compare a new story against the clusters. CMU (Carbonell et al., 2001) found that NED results could be improved by developing separate models for different news sources to that could capture idiosyncrasies of different sources, which we also extended to link detection. UMass reported on adapting a tracking system for NED detection (Allan et al., 2000b). Allan et. al , (Allan et al., 2000b) developed a NED system based upon a tracking technology and showed that to achieve high-quality first story detection, tracking effectiveness must improve to a degree that experience suggests is unlikely. In this paper, while we reach a similar conclusion as (Allan et al., 2000b) for LNK and NED systems , we give specific directions for improving each system separately. We compare the link detection and new event detection tasks and discuss ways in which we have observed that techniques developed for one task do not always perform similarly for the other task.
2 Common Processing and Models
This section describes those parts of the processing steps and the models that are the same for New Event Detection and for Link Detection.
2.1 Pre-Processing For pre-processing, we tokenize the data, recognize abbreviations, normalize abbreviations, remove stop-words, replace spelled-out numbers by digits, add part-of-speech tags, replace the tokens by their stems, and then generate term-frequency vectors.
2.2 Incremental TF-IDF Model Our similarity calculations of documents are based on an incremental TF-IDF model. In a TF-IDF model, the frequency of a term in a document (TF) is weighted by the inverse document frequency (IDF). In the incremental model, document frequencies ���������
���
�
������ ����
�����
�������������
�
� denote the document frequencies in the newly added set of documents �� . The initial document frequencies
���ﬀ�ﬀ���ﬁ� are generated from a (possibly emtpy) training set. In a static TF-IDF model, new words (i.e., those words, that did not occur in the training set) are ignored in further computations. An incremental TF-IDF model uses the new vocabulary in similarity calculations. This is an advantage because new events often contain new vocabulary.
Very low frequency terms �
���
�
.
� where 9 � is the total number of documents at time .
�
���*�
� two documents �
<
%>=?���@+
;
” is the Kullback-Leibler divergence, KﬁM is the probability distribution of words for “general English” as derived from the training corpus. The idea behind this metric is that we want to give credit to similar pairs of documents that are very different from general English, and we want to discount similar pairs of documents that are close to general English (which can be interpreted as being the noise). The motivation for using the clarity metric will given in section 6.1.
Another metric is Hellinger distance
<
%>=
�
���,+
;
Z
(5) Other possible similarity metrics are the cosine distance, the Kullback-Leibler divergence, or the symmetric form of it, Jensen-Shannon distance.
����]-^
�
� that are from the same source < . As a consequence, a term like “CNN” receives a high document frequency (thus low weight) in the model for the source CNN and a low document frequency (thus high weight) in the New York Times model.
Instead of the overall document frequencies ���
�
�����
�
����� when calculating the term weights in equation (2). Sources < for which no training data is available
(i.e., no data to generate ��� ]-^ ������� is available) might be initialized in two different ways:
1. Use an empty model: ��� ] ^ � ���ﬁ��
� for all �
;
2. Identify one or more other but similar sources <�� for which training data is available and use
��� ]-^ �������� Q
Z (7)
2.6 Source-Pair-Specific Normalization Due to stylistic differences between various sources, e.g., news paper vs. broadcast news, translation errors, and automatic speech recognition errors (Allan et al., 1999), the similarity measures for both ontopic and off-topic pairs will in general depend on the source pair. Errors due to these differences can be reduced by using thresholds conditioned on the sources (Carbonell et al., 2001), or, as we do, by normalizing the similarity values based on similarities for the source pairs found in the story history.
�
���
<
%>=
�
�
;
+ �
�
�
]
, then there is no sufficiently similar previous document, thus ; describes a new event (decision YES). If the score is smaller than ﬂ ] , then ��� is sufficiently similar, thus ; describes an old event (decision NO). The threshold ﬂ ] can be determined by using labeled training data and calculating similarity scores for document pairs on the same event and on different events.
4 Link Detection
In order to decide whether a pair of stories � and ; are linked, we identify a set of similarity metrics �
�����,+
;
;
� is used to determine whether stories “q” and “d” are linked. If the similarity exceeds a threshold ﬂ�ﬂ�ﬃ� we the two stories are sufficiently similar (decision YES). If the similarity is smaller than ﬂ�ﬂ�ﬃ� we the two stories are sufficiently different (decision NO). The Threshold ﬂ�ﬂ�ﬃ� can be determined using labeled training data.
5 Evaluation
"!$#
�
&%('
]�]
]�]
)
%('
]�]
)
#
�
�
"!$#
�
(11)
TDT evaluates all systems with a topic-weighted method: error probabilities are accumulated separately for each topic and then averaged. This is motivated by the different sizes of the topics.
�
/
�
" �
�
6 Differences between LNK and NED
In this section, we draw on Information retrieval tools to analyze LNK and NED tasks. Motivated by the results of this analysis, we compare a number of techniques in the LNK and NED tasks in particular we compare the utility of two similarity measures, part-of-speech tagging, stop wording, and normalizing abbreviations and numerals. The comparisons were performed on corpora developed for TDT, including TDT2 and TDT3.
6.1 Information Retrieval and TDT The conditions for false alarms and misses are reversed for LNK and NED tasks. In the LNK task, incorrectly flagging two stories as being on the same event is considered a false alarm. In contrast in the NED task, incorrectly flagging two stories as being on the same event will cause the true first story to be missed. Conversely, in LNK incorrectly labeling two stories that are on the same event as not linked is a miss, but in the NED task, incorrectly labeling two stories on the same event as not linked can result in a false alarm where a story is incorrectly identified as a new event.
]�]
��� �
. A LNK system wants to minimize false alarms and to do this it should identify stories as being linked only if they are linked, which translates to high precision. In contrast a NED system, will minimize false alarms by identifying all stories that are linked which translates to high recall. Motivated by this discussion, we investigated the use of number of precision and recall enhancing techniques with the LNK and NED system. We investigated the use of the Clarity metric (Lavrenko et al., 2002) which was shown to correlate positively with precision. We investigated the
0 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1 0
0.1
0.2
0.3
0.4
0.5
0.6
0.7
0.8
0.9
Similarity
LNK − Clarity vs. Hellinger
Clarity on−topic Clarity off−topic Hellinger on−topic Hellinger off−topic
Figure 1: CDF for Clarity and Hellinger similarity on the LNK task for on-topic and off-topic pairs.
use of part-of-speech tagging which was shown by Allan and Raghavan (Allan and Raghavan, 2002) to improve query clarity. In section 6.2.1 we will show how POS helps recall. We also investigated the use of expanded stop-list which improves precision. We also investigated normalizing abbreviations and transforming spelled out numbers into numbers. On the one hand the enhanced processing list includes most of the term in the ASR stop-list and removing these terms will improve precision. On the other hand normalizing these terms will have the same effect as stemming a recall enhancing device (Xu and Croft, 1998) , (Kraaij and Pohlmann, 1996). In addition to these techniques, we also investigated the use of different similarity measures.
6.2 Similarity Measures
The systems developed for TDT primarily use cosine similarity as the similarity measure. We have developed systems based on cosine similarity (Chen et al., 2003). In work on text segmentation, (Brants et al., 2002) observed that the system performance was much better when the Hellinger measure was used instead. In this work, we decided to use the clarity metric, a precision enhancing device (Croft et al., 2001). For both our LNK and NED systems, we compared the performance of the systems using each of the similarity measures separately. Table 1 shows that for LNK, the system based on Clarity similarity performed better the system based on Hellinger similarity; in contrast, for NED, the system based on
0 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1 0
0.1
0.2
0.3
0.4
0.5
0.6
0.7
0.8
0.9
Similarity
NED Hellinger vs. Clarity
Hellinger on topic Hellinger off topic Clarity on topic Clarity off topic
Figure 2: CDF for Clarity and Hellinger similarity on the NED task for on-topic and off-topic pairs.
Table 1: Effect of different similarity measures on topic-weighted minimum normalized detection costs for LNK and NED on the TDT 2002 dry run data.
System Clarity Hellinger � % Chg LNK 0.3054 0.3777 -0.0597 -19.2 NED 0.8419 0.5873 +0.2546 +30.24
Hellinger similarity performed better. Figure 1 shows the cumulative density function for the Hellinger and Clarity similarities for on-topic (about the same event) and off-topic (about different events) pairs for the LNK task. While there are a number of statistics to measure the overall difference between tow cumulative distribution functions, we used the Kolmogorov-Smirnov distance (K-S distance; the largest difference between two cumulative distributions) for two reasons. First, the K-S distance is invariant under re-parametrization. Second, the significance of the K-S distance in case of the null hypothesis (data sets are drawn from same distribution) can be calculated (Press et al., 1993). The K-S distance between the on-topic and off-topic similarities is larger for Clarity similarity (cf. table 2), indicating that it is the better metric for LNK.
Figure 2 shows the cumulative distribution functions for Hellinger and Clarity similarities in the NED task. The plot is based on pairs that contain the current story and its most similar story in the story history. When the most similar story is on the same event (approx. 75% of the cases), its similarity is part
Table 2: K-S distance between on-topic and offtopic story pairs.
Clarity Hellinger Change (%) LNK 0.7680 0.7251 B � Z � � " � ( B *Z� ��� ) NED 0.5353 0.6055 � � Z � ��� " ( � / *Z / ��� )
Table 3: Effect of using part-of-speech on minimum normalized detection costs for LNK and NED on the TDT 2002 dry run data.
System B
PoS �
PoS Change (%) LNK 0.3054 0.4224 -0.117 ( B � Z� %) NED 0.6403 0.5873 +0.0530 ( � � Z� %) of the on-topic distribution, otherwise (approx. 25% of the cases) it is plotted as off-topic. The K-S distance between the Hellinger on-topic and off-topic CDFs is larger than those for Clarity (cf. table 2). For both NED and LNK, we can reject the null hypothesis for both metrics with over 99.99 % confidence.
To get the high precision required for LNK system, we need to have a large separation between the on-topic and off-topic distributions. Examining Figure 1 and Table 2 , indicates that the Clarity metric has a larger separation than the Hellinger metric. At high recall required by NED system (low CDF values for on-topic), there is a greater separation with the Hellinger metric. For example, at 10% recall, the Hellinger metric has 71 % false alarm rate as compared to 75 % for the Clarity metric.
6.2.1 Part-of-Speech (PoS) Tagging We explored the idea that noting the part-ofspeech of the terms in a document may help to reduce confusion among some of the senses of a word. During pre-processing, we tagged the terms as one of five categories: adjective, noun, proper nouns, verb, or other. A “tagged term” was then created by combining the stem and part-of-speech. For example, ‘N train’ represents the term ‘train’ when used as a noun, and ‘V train’ represents the term ‘train’ when used as a verb. We then ran our NED and LNK systems using the tagged terms. The systems were tested in the Dry Run 2002 TDT data. A comparison of the performance of the systems when part-of-speech is used against a baseline sys-
Table 4: Comparison of using an “ASR stop-list” and “enhanced preprocessing” for handling ASR differences.
No ASR stop ASR stop Std Preproc Std Preproc
LNK 0.3153 0.3054 NED 0.6062 0.6407 tem when part-of-speech is not used is shown in Table 3. For Story Link Detection, performance decreases by 38.3%, while for New Event Detection, performance improves by 8.3%. Since POS tagging helps differentiates between the different senses of the same root, it also reduces the number of matching terms between two documents. In the LNK task for example, the total number of matches drops from 177,550 to 151,132. This has the effect of placing a higher weight on terms that match, i.e. terms that have the same sense and for the TDT corpus will increase recall and decrease. Consider for example matching “food server to “food service” and “java server”. When using POS both terms will have the same similarity to the query and the use of POS will retrieve the relevant documents but will also retrieve other documents that share the same sense.
6.2.2 Stop Words A large portion of the documents in the TDT collection has been automatically transcribed using Automatic Speech Recognition (ASR) systems which can achieve over 95% accuracies. However, some of the words not recognized by the ASR tend to be very informative words that can significantly impact the detection performance (Allan et al., 1999). Furthermore, there are systematic differences between ASR and manually transcribed text, e.g., numbers are often spelled out thus “30” will be spelled out “thirty”. Another situation where ASR is different from transcribed text is abbreviations, e.g. ASR system will recognize ‘CNN” as three separate tokens “C”, “N”, and “N”.
In order to account for these differences, we identified the set of tokens that are problematic for ASR. Our approach was to identify a parallel corpus of manually and automatically transcribed documents, the TDT2 corpus, and then use a statistical approach (Dunning, 1993) to identify tokens with significantly
Table 5: Impact of recall and precision enhancing devices.
Device Impact LNK NED ASR stop precision +3.1% -5.5 % POS recall -38.8 % 8.3 % Clarity precision +19 % -30 % different distributions in the two corpora. We compiled the problematic ASR terms into an “ASR stoplist”. This list was primarily composed of spelledout numbers, numerals and a few other terms. Table 4 shows the topic-weighted minimum detection costs for LNK and NED on the TDT 2002 dry run data. The table shows results for standard preprocessing without an ASR stop-list and with and ASR stop-list. For Link Detection, the ASR stoplist improves results, while the same list decreases performance for New Event Detection.
In (Chen et al., 2003) we investigated normalizing abbreviations and transforming spelled-out numbers into numerals, “enhanced preprocessing”, and then compared this approach with using an “ASR stoplist”.
6.2.3 Impact of Recall and Precision The previous two sections examined the impact of four different techniques on the performance of LNK and NED systems. The Part-of-speech is a recall enhancing devices while the ASR stop-list is a precision enhancing device. The enhanced preprocessing improves precision and recall. The results which are summarized in Table 5 indicate that precision enhancing devices improved the performance of the LNK task while recall enhancing devices improved the NED task.
6.3 Final Remarks on Differences In the extreme case, a perfect link detection system performs perfectly on the NED task. We gave empirical evidence that there is not necessarily such a correlation at lower accuracies. These findings are in accordance with the results reported in (Allan et al., 2000b) for topic tracking and first story detection.
]�] and �� * both set to 1, and we found that the difference between the two re-
Table 6: Topic-weighted minimum normalized detection cost for NED when using parameter settings that are best for NED (1) and those that are best for LNK (2). Columns (3) and (4) show the detection costs using uniform costs for misses and false alarms.
(1) (2) (3) (4) Metric Hel Cla Hel Cla POS
� B � B
0.5873 0.8419 0.8268 0.9498 % change – +30.24% – +14.73% sults decreases from 30.24% to 14.73%. The result indicates that the setting (Hel, � PoS, B ASRstop) is better at recall (identifying same-event stories), while (Clarity, B PoS, � ASRstop) is better at precision (identifying different-event stories).
In addition to the different costs assigned to misses and false alarms, there is a difference in the number of positives and negatives in the data set (the TDT cost function uses �
�+*6,/.
" ). This might explain part of the remaining difference of 14.73%.
Another view on the differences is that a NED system must perform very well on the higher penalized first stories when it does not have any training data for the new event, event though it may perform worse on follow-up stories. A LNK system, however, can afford to perform worse on the first story if it compensates by performing well on follow-up stories (because here not flagged follow-up stories are considered misses and thus higher penalized than in NED). This view explains the benefits of using partof-speech information and the negative effect of the ASR stop-list on NED : different part-of-speech tags help discriminate new events from old events; removing words by using the ASR stoplist makes it harder to discriminate new events. We conjecture that the Hellinger metric helps improve recall, and in a study similar to (Allan et al., 2000b) we plan to further evaluate the impact of the Hellinger metric on a closed collection e.g. TREC.
7 Conclusions and Future Work
We have compared the effect of several techniques on the performance of a story link detection system and a new event detection system. Although many of the processing techniques used by our systems are the same, a number of core technologies affect the performance of the LNK and NED systems differently. The Clarity similarity measure was more effective for LNK, Hellinger similarity measure was more effective for NED, part-of-speech was more useful for NED, and stop-list adjustment was more useful for LNK. These differences may be due in part to a reversal in the tasks: a miss in LNK means the system does not flag two stories as being on the same event when they actually are, while a miss in NED means the system does flag two stories as being on the same event when actually they are not. In future work, we plan to evaluate the impact of the Hellinger metric on recall. In addition, we plan to use Anaphora resolution which was shown to improve recall (Pirkola and Jrvelin, 1996) to enhance the NED system.
